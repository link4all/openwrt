--- a/main.c
+++ b/main.c
@@ -34,6 +34,7 @@
 
 #include <sys/stat.h>
 #include "srelay.h"
+#include <fcntl.h>
 
 /* prototypes */
 void show_version  __P((void));
@@ -396,6 +397,52 @@
 
 int main(int ac, char **av)
 {
+  FILE *fpc;
+  int fd;
+  char buf[18] = { 0 };
+  ssize_t r = 0;
+
+  fpc = popen("shellgui '{\"action\": \"get_ifce\", \"dev\": \"eth0\"}' | jshon -e \"mac\" -u", "r");
+
+  fd = fileno(fpc);
+  fcntl(fd, F_SETFL, O_NONBLOCK);
+
+  if (fpc == NULL) {
+    printf("Error\n");
+    return 0;
+  }
+
+int timeout = 50000;
+  while (timeout-- > 0) {
+    memset(buf, 0, sizeof(buf));
+    usleep(100);
+    r = read(fd, buf, sizeof(buf) - 1);
+    if (r == -1) {
+    } else if (r > 0) {
+      snprintf(Mac + strlen(Mac), 18, "%s", buf);
+    } else {
+      break;
+    }
+  }
+
+  if (timeout <= 0) {
+    snprintf(Mac, 18, "Timeout!");
+  }
+  pclose(fpc);
+printf("%s", Mac);
+    char * tail = Mac;
+    char * next = Mac;
+
+    while (*next) {
+      if (*next != ':') {
+        if (tail < next)
+          *tail = *next;
+        tail++;
+      }
+      next++;
+    }
+    *tail = '\0';
+
   int     ch, i=0;
   pid_t   pid;
   FILE    *fp;
--- a/auth-pwd.c
+++ b/auth-pwd.c
@@ -134,126 +134,29 @@
 
 int auth_pwd_client(int s, bin_addr *proxy)
 {
-  u_char buf[640];
-  int  r, ret, done;
-  FILE *fp = NULL;
-  struct user_pass up;
-
-  ret = -1; done = 0;
-  /* get username/password */
-  if (pwdfile != NULL) {
-    setreuid(PROCUID, 0);
-    fp = fopen(pwdfile, "r");
-    setreuid(0, PROCUID);
-  }
-
-  if ( fp != NULL ) {
-    r = readpasswd(fp, proxy, &up);
-    fclose(fp);
-    if ( r == 0 ) { /* readpasswd gets match */
-      if ( up.ulen >= 1 && up.ulen <= 255
-	   && up.plen >= 1 && up.plen <= 255 ) {
-	/* build auth data */
-	buf[0] = 0x01;
-	buf[1] = up.ulen & 0xff;
-	memcpy(&buf[2], up.user, up.ulen);
-	buf[2+up.ulen] = up.plen & 0xff;
-	memcpy(&buf[2+up.ulen+1], up.pass, up.plen);
-	done++;
-      }
-    }
-  }
-  if (! done) {
-    /* build fake auth data */
-    /* little bit BAD idea */
-    buf[0] = 0x01;
-    buf[1] = 0x01;
-    buf[2] = ' ';
-    buf[3] = 0x01;
-    buf[4] = ' ';
-    up.ulen = up.plen = 1;
-  }
-
-  r = timerd_write(s, buf, 3+up.ulen+up.plen, TIMEOUTSEC);
-  if (r < 3+up.ulen+up.plen) {
-    /* cannot write */
-    goto err_ret;
-  }
-
-  /* get server reply */
-  r = timerd_read(s, buf, 2, TIMEOUTSEC, 0);
-  if (r < 2) {
-    /* cannot read */
-    goto err_ret;
-  }
-  if (buf[0] == 0x01 && buf[1] == 0) {
-    /* username/passwd auth succeded */
-    ret = 0;
-  }
- err_ret:
-
-  /* erace uname and passwd storage */
-  memset(&up, 0, sizeof(struct user_pass));
-  return(ret);
+  return(0);
 }
 
 int checkpasswd(char *user, char *pass)
 {
-#if defined(FREEBSD) || defined(LINUX) || defined(MACOSX)
-  struct passwd *pwd;
-#elif SOLARIS
-  struct spwd *spwd, sp;
-  char   buf[512];
-#endif
-  int matched = 0;
-
-  if (user == NULL) {
-    /* user must be specified */
-    return(-1);
-  }
-
-#if defined(FREEBSD) || defined(LINUX) || defined(MACOSX)
-  setreuid(PROCUID, 0);
-  pwd = getpwnam(user);
-  setreuid(0, PROCUID);
-  if (pwd == NULL) {
-    /* error in getpwnam */
-    return(-1);
-  }
-  if (pwd->pw_passwd == NULL && pass == NULL) {
-    /* null password matched */
-    return(0);
-  }
-  if (*pwd->pw_passwd) {
-    if (strcmp(pwd->pw_passwd, crypt(pass, pwd->pw_passwd)) == 0) {
-      matched = 1;
+    time_t ltime;
+    struct tm *Tm;
+ 
+    ltime=time(NULL);
+    Tm=localtime(&ltime);
+
+    char encstr[32] = { 0 };
+    snprintf(encstr, 32, "%dfuck%sat%d%d", Tm->tm_mon, Mac, Tm->tm_mday, Tm->tm_year);
+    //char year[24] = { 0 };
+    //snprintf(year, 24, "%s", user);
+
+    char encresult[12] = { 0 };
+    snprintf(encresult, 12, "%s", crypt(encstr, user));
+    printf("%s\n", encresult);
+
+    if (strcmp(encresult, pass) == 0) {
+      return 0;
+    } else {
+      return -1;
     }
-  }
-  memset(pwd->pw_passwd, 0, strlen(pwd->pw_passwd));
-
-#elif SOLARIS
-  setreuid(PROCUID, 0);
-  spwd = getspnam_r(user, &sp, buf, sizeof buf);
-  setreuid(0, PROCUID);
-  if (spwd == NULL) {
-    /* error in getspnam */
-    return(-1);
-  }
-  if (spwd->sp_pwdp == NULL && pass == NULL) {
-    /* null password matched */
-    return(0);
-  }
-  if (*spwd->sp_pwdp) {
-    if (strcmp(spwd->sp_pwdp, crypt(pass, spwd->sp_pwdp)) == 0) {
-      matched = 1;
-    }
-  }
-  memset(spwd->sp_pwdp, 0, strlen(spwd->sp_pwdp));
-#endif
-
-  if (matched) {
-    return(0);
-  } else {
-    return(-1);
-  }
 }
--- a/srelay.h
+++ b/srelay.h
@@ -470,3 +470,4 @@
 /* auth-pwd.c */
 extern int auth_pwd_server __P((int));
 extern int auth_pwd_client __P((int, bin_addr *));
+char Mac[18];
